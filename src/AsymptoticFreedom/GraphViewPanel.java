/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AsymptoticFreedom;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYDrawableAnnotation;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Geonmo
 */
public class GraphViewPanel extends ChartPanel {

    public GraphViewPanel(JFreeChart chart){                        
            super(chart);        
    }
    public static JFreeChart getResultChart(){
        // XY시리즈 생성.
        XYSeries series = new XYSeries("Potential of quarks");            
        XYSeries series2 = new XYSeries("Potential of quarks2");            
        
        series.add(1,1);    
        series.add(10,10);    
        series.add(20,20);    
        series2.add(3,21);
        series2.add(15,18);
        series2.add(20,12);
        // XY시리즈를 Dataset 형태로 변경
        XYSeriesCollection data = new XYSeriesCollection();
        data.addSeries(series);
        data.addSeries(series2);
        final JFreeChart chart = ChartFactory.createXYLineChart("Potential","Distance","Potential",data,PlotOrientation.VERTICAL,true,true,false);
        chart.setTitle("Potential of quarks"); // 차트 타이틀
        XYPlot plot = (XYPlot)chart.getPlot();
        plot.addRangeMarker(new ValueMarker(15,Color.RED,new BasicStroke(2.0f)));
        XYPointerAnnotation pointer = new XYPointerAnnotation("Best bid",10,15,3.0*Math.PI/4.0);
        plot.addAnnotation(pointer);
        return chart;            
    }
    public void paintComponent(Graphics g2)
    {
        super.paintComponent(g2);
        this.setChart(getResultChart());
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
